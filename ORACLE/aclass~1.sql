/*
    데이터를 저장할 테이블 생성
    회원관리용 테이블 생성
    테이블 이름 : MEMBER
    저장할 회원 정보 : 이름,주소,나이,성별,등급,전화번호
    이름 : NAME - 문자(VARCHAR2 -> 한글기준5글자 -> 15)
    주소 : ADDR - 문자(VARCHAR2 -> 500)
    나이 : AGE - 숫자(NUMBER)
    성별 : GENDER - M/F문자(CHAR -> 1)
    등급 : GRADE - 문자(VARCHAR2 -> 10)
    01011112222->11 / 0010-1111-2222->13
    전화번호 : PHONE_NUMBER 문자(CHAR -> 13)
*/
CREATE TABLE MEMBER(
    NAME VARCHAR2(15),
    ADDR VARCHAR2(500),
    AGE NUMBER,
    GENDER CHAR(1),
    GRADE VARCHAR2(10),
    PHONE_NUMBER CHAR(13)
);
COMMENT ON COLUMN MEMBER.NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.ADDR IS '회원주소';
COMMENT ON COLUMN MEMBER.AGE IS '나이';
COMMENT ON COLUMN MEMBER.GENDER IS '성별';
COMMENT ON COLUMN MEMBER.GRADE IS '회원등급';
COMMENT ON COLUMN MEMBER.PHONE_NUMBER IS '전화번호';

INSERT INTO MEMBER VALUES('유저1','서울시 영등포구 당산동',20,'M','SILVER','010-1234-5678');
INSERT INTO MEMBER VALUES('유저2','경기도 고양시 일산동구',23,'F','VIP','010-1111-1111');
INSERT INTO MEMBER VALUES('유저3','경기도 용인시',24,'F','VIP','010-2222-2222');
INSERT INTO MEMBER VALUES('유저4','서울시 서대문구',25,'M','GOLD','010-1234-1324');
INSERT INTO MEMBER VALUES('유저5','서울시 영등포구 여의도',22,'F','VIP','010-3333-3333');
INSERT INTO MEMBER VALUES('유저6','인천',29,'F','VIP','010-3333-3333');

SELECT * FROM MEMBER;
--성별이 F 데이터 가져오기
SELECT * FROM MEMBER WHERE GENDER='F';

CREATE TABLE MEMBER_TBL(
    MEMBER_ID VARCHAR(20) UNIQUE,
    MEMBER_PW VARCHAR(20),
    MEMBER_NAME VARCHAR(10)
);
INSERT INTO MEMBER_TBL VALUES('user01','1234','유저1');
INSERT INTO MEMBER_TBL VALUES('user02','1111','유저2');
INSERT INTO MEMBER_TBL VALUES('user03','2345','유저3');
SELECT * FROM MEMBER_TBL;
DROP TABLE MEMBER_TBL;
------------------------------------------------------------
-- 비교를 위한 제약조건이 없는 기본테이블
CREATE TABLE USER_NOCONS(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13)
);
INSERT INTO USER_NOCONS VALUES(1,'user01','1234','유저1','F','010-1234-5678');
INSERT INTO USER_NOCONS VALUES(NULL,'NULL','NULL','유저2','M','010-1111-2323');
SELECT * FROM USER_NOCONS;
--1. NOT NULL
CREATE TABLE USER_NOTNULL(
    USER_NO NUMBER NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PW VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13)
);
INSERT INTO USER_NOTNULL VALUES(1,'user01','1234','유저1','F','010-1234-5678');
INSERT INTO USER_NOTNULL VALUES(2,'user02','1111','유저2','M','010-1111-2323');
SELECT * FROM USER_NOTNULL;
--2. UNIQUE
/*
--UNIQUE제약조건 설정방법 1.컬럼레벨에 설정
*/
CREATE TABLE USER_UNIQUE(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) UNIQUE,
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13)
);
INSERT INTO USER_UNIQUE VALUES(1,NULL,'1234','유저1','F','010-1234-5678');
SELECT * FROM USER_UNIQUE;
DROP TABLE USER_UNIQUE;
/*
--UNIQUE제약조건 설정방법 2.테이블레벨에 설정
*/
CREATE TABLE USER_UNIQUE(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13),
    UNIQUE (USER_ID)
);
INSERT INTO USER_UNIQUE VALUES(1,NULL,'1234','유저1','F','010-1234-5678');
SELECT * FROM USER_UNIQUE;
DROP TABLE USER_UNIQUE;
-- UNIQUE + NOT NULL
CREATE TABLE USER_UNIQUE2(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) UNIQUE NOT NULL,
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13)
);
INSERT INTO USER_UNIQUE2 VALUES(1,NULL,'1234','유저1','F','010-1234-5678');
--
CREATE TABLE USER_UNIQUE3(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13),
    UNIQUE(USER_ID,USER_NO)
);
INSERT INTO USER_UNIQUE3 VALUES(1,'USER01','1234','유저1','F','010-1234-5678');
INSERT INTO USER_UNIQUE3 VALUES(1,'USER02','1234','유저1','F','010-1234-5678');
INSERT INTO USER_UNIQUE3 VALUES(2,'USER01','1234','유저1','F','010-1234-5678');
INSERT INTO USER_UNIQUE3 VALUES(1,'USER01','1234','유저1','F','010-1234-5678');

--PRIMARY KEY = UNIQUE + NOT NULL + 고유식별자라는 상징적인 의미
/*
--PRIMARY KEY 컬럼레벨
CREATE TABLE USER_PK1(
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13)
);
*/
--PRIMARY KEY 테이블레벨
CREATE TABLE USER_PK1(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13),
    PRIMARY KEY(USER_NO)
);
INSERT INTO USER_PK1 VALUES(1,'USER01','1234','유저1','F','010-1234-5678');
--두 컬럼을 합쳐서 PRIMARY KEY로 사용하는 경우
CREATE TABLE USER_PK2(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PW VARCHAR2(20),
    USER_NAME VARCHAR2(20),
    GENDER CHAR(1),
    PHONE CHAR(13),
    PRIMARY KEY(USER_NO,USER_ID)
);
INSERT INTO USER_PK2 VALUES(1,'USER01','1234','유저1','F','010-1234-5678');
INSERT INTO USER_PK2 VALUES(1,'USER02','1234','유저1','F','010-1234-5678');
INSERT INTO USER_PK2 VALUES(2,'USER02','1234','유저1','F','010-1234-5678');
SELECT * FROM USER_PK2;
------------------------------------------------------------

CREATE TABLE SHOP_MEMBER(
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) UNIQUE,
    MEMBER_PW VARCHAR2(30) NOT NULL,
    MEMBER_NAME VARCHAR2(20),
    PHONE CHAR(13)
);
INSERT INTO SHOP_MEMBER VALUES(1,'user01','1234','유저1','010-1234-5678');
INSERT INTO SHOP_MEMBER VALUES(2,'user02','1111','유저2','010-1315-2123');
INSERT INTO SHOP_MEMBER VALUES(3,'user03','9876','유저3','010-1577-1277');
INSERT INTO SHOP_MEMBER VALUES(4,'user11','2222','유저4','010-1548-1567');

SELECT * FROM SHOP_MEMBER;

CREATE TABLE SHOP_BUY(
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20),
    PRODUCT_NAME VARCHAR2(30)
);
INSERT INTO SHOP_BUY VALUES(1,'user01','아이폰12');
INSERT INTO SHOP_BUY VALUES(2,'user03','노트북');
INSERT INTO SHOP_BUY VALUES(3,'user11','이레빌딩');
SELECT * FROM SHOP_BUY;

--외래키
/*
--컬럼레벨
CREATE TABLE SHOP_BUY1(
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) REFERENCES SHOP_MEMBER(MEMBER_ID),
    PRODUCT_NAME VARCHAR2(30)
);
*/
/*
--테이블레벨
CREATE TABLE SHOP_BUY1(
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20),
    PRODUCT_NAME VARCHAR2(30),
    FOREIGN KEY(USER_ID) REFERENCES SHOP_MEMBER(MEMBER_ID)
);
*/
CREATE TABLE SHOP_BUY1(
    BUY_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20),
    PRODUCT_NAME VARCHAR2(30),
    FOREIGN KEY(USER_ID) REFERENCES SHOP_MEMBER(MEMBER_ID) ON DELETE CASCADE
);
DROP TABLE SHOP_BUY1;
INSERT INTO SHOP_BUY1 VALUES(1,'user01','아이폰12');
INSERT INTO SHOP_BUY1 VALUES(2,'user03','노트북');
INSERT INTO SHOP_BUY1 VALUES(3,'user11','이레빌딩');
SELECT * FROM SHOP_BUY1;
SELECT * FROM SHOP_MEMBER;
DELETE FROM SHOP_MEMBER WHERE MEMBER_NO=2;
DELETE FROM SHOP_MEMBER WHERE MEMBER_NO=4;

CREATE TABLE SHOP_BUY2(
    BUY_NO NUMBER PRIMARY KEY,
    --참조할 데이터 타입이 같아야함
    --USER_ID VARCHAR2(20) REFERENCES SHOP_MEMBER(MEMBER_NO),
    USER_NO NUMBER REFERENCES SHOP_MEMBER(MEMBER_NO),
    PRODUCT_NAME VARCHAR2(30)
);
INSERT INTO SHOP_BUY2 VALUES(1,1,'아이폰12');
--참조할 테이블이름만 작성하고 참조할 컬럼을 지정하지 않은 경우 해당테이블의 PRIMARY KEY를 참조
--SHOP_BUY2와 같음
CREATE TABLE SHOP_BUY3(
    BUY_NO NUMBER PRIMARY KEY,
    USER_NO NUMBER REFERENCES SHOP_MEMBER,
    PRODUCT_NAME VARCHAR2(30)
);
DROP TABLE SHOP_BUY2;
DROP TABLE SHOP_BUY3;
/*
CREATE TABLE SHOP_BUY4(
    BUY_NO NUMBER PRIMARY KEY,
    --UNIQUE, PRIMARY KEY(제약조건)가 아닌 컬럼은 참조할 수 없음
    USER_NAME VARCHAR2(20) REFERENCES SHOP_MEMBER(MEMBER_NAME),
    PRODUCT_NAME VARCHAR2(30)
);
*/

COMMIT;