--1. NOT NULL : 설정한 컬럼에 NULL입력 불가
--2. UNIQUE : 컬럼에 중복된 데이터 입력 불가능
--3. PRIMARY KEY : NOT NULL + UNIQUE 고유식별자로 사용하겠다는 의미
--4. FOREIGN KEY : 다른테이블의 값을 참조 -> PRIMARY KEY OR UNIQUE
--     ->삭제옵션
--      1) 삭제 불가능
--      2) NULL값으로 변경
--      3) 참조데이터도 같이 삭제
-- 쇼핑몰 회원테이블
/*
회원테이블
회원번호
회원아이디
비밀번호
이름
나이
전화번호
*/
CREATE TABLE SHOP_MEMBER(
    MEMBER_NO   NUMBER          PRIMARY KEY,
    MEMBER_ID   VARCHAR2(20)    UNIQUE NOT NULL,
    MEMBER_PW   VARCHAR2(30)    NOT NULL,
    MEMBER_NAME VARCHAR2(15),
    MEMBER_AGE  NUMBER,
    PHONE       CHAR(13)
);

INSERT INTO SHOP_MEMBER VALUES(1,'TEST1','1234','테스터1','33','010-2233-1111');
INSERT INTO SHOP_MEMBER VALUES(2,'TEST2','1234','테스터2','33','010-2233-1111');
INSERT INTO SHOP_MEMBER VALUES(3,'TEST3','1234','테스터3','33','010-2233-1111');
INSERT INTO SHOP_MEMBER VALUES(4,'TEST4','1234','테스터4','33','010-2233-1111');
INSERT INTO SHOP_MEMBER VALUES(5,'TEST5','1234','테스터5','33','010-2233-1111');

SELECT * FROM SHOP_MEMBER;
DROP TABLE BUY_LIST;
DROP TABLE SHOP_MEMBER;
CREATE TABLE BUY_LIST(
    BUY_NO NUMBER PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(100) NOT NULL,
    BUY_MEMBER VARCHAR2(20) REFERENCES SHOP_MEMBER(MEMBER_ID) ON DELETE CASCADE
);

INSERT INTO BUY_LIST VALUES(1,'갤럭시','TEST2');
INSERT INTO BUY_LIST VALUES(2,'아이폰','TEST3');

DELETE FROM SHOP_MEMBER WHERE MEMBER_NO=2;

SELECT * FROM  BUY_LIST; 

SELECT * FROM SHOP_MEMBER;

CREATE TABLE MEMBER_NOCONS(
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR(20) UNIQUE NOT NULL,
    GENDER CHAR(6)
);
INSERT INTO MEMBER_NOCONS VALUES(1,'USER01','남자');
INSERT INTO MEMBER_NOCONS VALUES(2,'USER02','여자');
INSERT INTO MEMBER_NOCONS VALUES(3,'USER04','남성');
INSERT INTO MEMBER_NOCONS VALUES(4,'USER05','여성');

SELECT * FROM MEMBER_NOCONS;

CREATE TABLE MEMBER_CHECK(
    MEMBER_NO NUMBER PRIMARY KEY,
    MEMBER_ID VARCHAR(20) UNIQUE NOT NULL,
    GENDER CHAR(6) CHECK(GENDER IN('남자','여자'))
);
INSERT INTO MEMBER_CHECK VALUES(1,'USER01','남자');
INSERT INTO MEMBER_CHECK VALUES(2,'USER02','여자');
--제약조건에 '남자','여자'만 삽입할 수 있다고 지정함
INSERT INTO MEMBER_CHECK VALUES(3,'USER04','남성');
INSERT INTO MEMBER_CHECK VALUES(4,'USER05','여성');

CREATE TABLE PRODUCT(
    PRO_NO NUMBER PRIMARY KEY,
    PRO_NAME VARCHAR2(100) NOT NULL,
    STOCK NUMBER
);

INSERT INTO PRODUCT VALUES(1,'맥북',20);
INSERT INTO PRODUCT VALUES(2,'노트북',30);

SELECT * FROM PRODUCT;
--테이블 수정 
--1. 컬럼 추가
ALTER TABLE PRODUCT ADD (PRICE NUMBER);
--2. 컬럼 수정
ALTER TABLE PRODUCT MODIFY PRO_NAME VARCHAR2(300);
DESC PRODUCT;

--3. 제약조건 사항은 확인
SELECT UC.CONSTRAINT_NAME,
        UC.CONSTRAINT_TYPE,
        UC.TABLE_NAME,
        UCC.COLUMN_NAME,
        UC.SEARCH_CONDITION
        FROM USER_CONSTRAINTS UC
        JOIN USER_CONS_COLUMNS UCC ON (UC.CONSTRAINT_NAME = UCC.CONSTRAINT_NAME)
        WHERE UC.TABLE_NAME = 'PRODUCT';
        
--PRO_NAME 컬럼에 UNIQUE 제약조건 추가
ALTER TABLE PRODUCT
ADD CONSTRAINT PRO_NAME_UNIQ UNIQUE(PRO_NAME);
--STOCK 컬럼에 NOT NULL 제약조건 추가
ALTER TABLE PRODUCT
MODIFY STOCK CONSTRAINT STOCK_NN NOT NULL;
        
--PRO_NAME 컬럼의 UNIQUE 제약조건 삭제 -> 1) 제약조건 이름
ALTER TABLE PRODUCT
DROP CONSTRAINT PRO_NAME_UNIQ;
--STOCK 컬럼의 UNIQUE 제약조건 삭제 
ALTER TABLE PRODUCT
MODIFY STOCK NULL;
--제약조건 이름 변경 SYS_C007125 SYS_C007126
ALTER TABLE PRODUCT
RENAME CONSTRAINT SYS_C007125 TO PRO_NAME_NN;

ALTER TABLE PRODUCT
RENAME CONSTRAINT SYS_C007126 TO PRO_NO_PK;

SELECT * FROM PRO;
--컬럼 이름 변경
ALTER TABLE PRODUCT
RENAME COLUMN STOCK TO AMOUNT;
--테이블 이름 변경
ALTER TABLE PRODUCT
RENAME TO PRO;

DROP TABLE PRO;

SELECT * FROM SHOP_MEMBER;
SELECT * FROM BUY_LIST;

DROP TABLE BUY_LIST;
DROP TABLE SHOP_MEMBER CASCADE CONSTRAINTS;



